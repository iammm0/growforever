{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://F%3A/growforever-main/frontend/src/lib/graphStore.ts"],"sourcesContent":["import { create } from 'zustand'\r\nimport { Node, Edge } from 'reactflow'\r\nimport {GrowMode} from \"@/types/GrowthNode\";\r\n\r\nconst initialRootNode: Node = {\r\n    id: 'root',\r\n    type: 'thought',\r\n    position: { x: 300, y: 150 },\r\n    data: {\r\n        title: 'üå± Ê∞∏ÊÅí‰πãÊ£Æ - ÁßçÂ≠ê',\r\n        summary: '‰∏ÄÂàá‰ªé‰∏Ä‰∏™ÊÉ≥Ê≥ïÂºÄÂßã„ÄÇ',\r\n        tags: ['AI', 'ÊÄùÁª¥Èìæ'],\r\n        highlight: true,\r\n        role: 'seed',\r\n    },\r\n}\r\n\r\n// üëá Á§∫‰æãÂàùÂßãÈÖçÁΩÆ\r\nconst defaultConfig: Record<GrowMode, AutoExpandConfig> = {\r\n    free: {\r\n        maxDepth: 4,\r\n        childrenRange: [1, 2],\r\n        interval: 800,\r\n        spreadRadius: 500,\r\n        angleSpread: 180,\r\n        autoArrange: true,\r\n    },\r\n    fury: {\r\n        maxDepth: 6,\r\n        childrenRange: [2, 4],\r\n        interval: 200,\r\n        spreadRadius: 500,\r\n        angleSpread: 300,\r\n        autoArrange: true,\r\n    },\r\n    manual: {\r\n        maxDepth: 0,\r\n        childrenRange: [0, 0],\r\n        interval: 0,\r\n        spreadRadius: 0,\r\n        angleSpread: 0,\r\n        autoArrange: false,\r\n    }\r\n}\r\n\r\ntype AutoExpandConfig = {\r\n    maxDepth: number\r\n    childrenRange: [number, number]\r\n    interval: number\r\n    spreadRadius: number\r\n    angleSpread: number\r\n    autoArrange: boolean\r\n}\r\n\r\ninterface GraphStore {\r\n    nodes: Node[]\r\n    edges: Edge[]\r\n    growMode: GrowMode\r\n    isAutoExpanding: boolean\r\n\r\n    setNodes: (updater: (nodes: Node[]) => Node[]) => void\r\n    setEdges: (updater: (edges: Edge[]) => Edge[]) => void\r\n    addNode: (node: Node) => void\r\n    addEdge: (edge: Edge) => void\r\n    setGrowMode: (mode: GrowMode) => void\r\n    setAutoExpanding: (v: boolean) => void\r\n    reset: () => void\r\n\r\n    config: Record<GrowMode, AutoExpandConfig>\r\n    setConfig: (mode: GrowMode, config: Partial<AutoExpandConfig>) => void\r\n}\r\n\r\nexport const useGraphStore = create<GraphStore>((set) => ({\r\n    nodes: [],\r\n    edges: [],\r\n    growMode: 'free',\r\n    isAutoExpanding: false,\r\n\r\n    setNodes: (updater) => set((state) => ({ nodes: updater(state.nodes) })),\r\n    setEdges: (updater) => set((state) => ({ edges: updater(state.edges) })),\r\n    addNode: (node) => set((state) => ({ nodes: [...state.nodes, node] })),\r\n    addEdge: (edge) => set((state) => ({ edges: [...state.edges, edge] })),\r\n    setGrowMode: (mode:GrowMode) => set({ growMode: mode }),\r\n    setAutoExpanding: (v) => set({ isAutoExpanding: v }),\r\n    reset: () => set({\r\n        nodes: [initialRootNode],\r\n        edges: [],\r\n        growMode: 'manual',\r\n        isAutoExpanding: false,\r\n    }),\r\n\r\n    config: defaultConfig,\r\n    setConfig: (mode, newConfig) => set((state) => ({\r\n        config: {\r\n            ...state.config,\r\n            [mode]: {\r\n                ...state.config[mode],\r\n                ...newConfig,\r\n            },\r\n        },\r\n    })),\r\n}))"],"names":[],"mappings":";;;AAAA;;AAIA,MAAM,kBAAwB;IAC1B,IAAI;IACJ,MAAM;IACN,UAAU;QAAE,GAAG;QAAK,GAAG;IAAI;IAC3B,MAAM;QACF,OAAO;QACP,SAAS;QACT,MAAM;YAAC;YAAM;SAAM;QACnB,WAAW;QACX,MAAM;IACV;AACJ;AAEA,YAAY;AACZ,MAAM,gBAAoD;IACtD,MAAM;QACF,UAAU;QACV,eAAe;YAAC;YAAG;SAAE;QACrB,UAAU;QACV,cAAc;QACd,aAAa;QACb,aAAa;IACjB;IACA,MAAM;QACF,UAAU;QACV,eAAe;YAAC;YAAG;SAAE;QACrB,UAAU;QACV,cAAc;QACd,aAAa;QACb,aAAa;IACjB;IACA,QAAQ;QACJ,UAAU;QACV,eAAe;YAAC;YAAG;SAAE;QACrB,UAAU;QACV,cAAc;QACd,aAAa;QACb,aAAa;IACjB;AACJ;AA6BO,MAAM,gBAAgB,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,EAAc,CAAC,MAAQ,CAAC;QACtD,OAAO,EAAE;QACT,OAAO,EAAE;QACT,UAAU;QACV,iBAAiB;QAEjB,UAAU,CAAC,UAAY,IAAI,CAAC,QAAU,CAAC;oBAAE,OAAO,QAAQ,MAAM,KAAK;gBAAE,CAAC;QACtE,UAAU,CAAC,UAAY,IAAI,CAAC,QAAU,CAAC;oBAAE,OAAO,QAAQ,MAAM,KAAK;gBAAE,CAAC;QACtE,SAAS,CAAC,OAAS,IAAI,CAAC,QAAU,CAAC;oBAAE,OAAO;2BAAI,MAAM,KAAK;wBAAE;qBAAK;gBAAC,CAAC;QACpE,SAAS,CAAC,OAAS,IAAI,CAAC,QAAU,CAAC;oBAAE,OAAO;2BAAI,MAAM,KAAK;wBAAE;qBAAK;gBAAC,CAAC;QACpE,aAAa,CAAC,OAAkB,IAAI;gBAAE,UAAU;YAAK;QACrD,kBAAkB,CAAC,IAAM,IAAI;gBAAE,iBAAiB;YAAE;QAClD,OAAO,IAAM,IAAI;gBACb,OAAO;oBAAC;iBAAgB;gBACxB,OAAO,EAAE;gBACT,UAAU;gBACV,iBAAiB;YACrB;QAEA,QAAQ;QACR,WAAW,CAAC,MAAM,YAAc,IAAI,CAAC,QAAU,CAAC;oBAC5C,QAAQ;wBACJ,GAAG,MAAM,MAAM;wBACf,CAAC,KAAK,EAAE;4BACJ,GAAG,MAAM,MAAM,CAAC,KAAK;4BACrB,GAAG,SAAS;wBAChB;oBACJ;gBACJ,CAAC;IACL,CAAC","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/styles/grow.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"card\": \"grow-module__vUxSFG__card\",\n  \"cardGrid\": \"grow-module__vUxSFG__cardGrid\",\n  \"default\": \"grow-module__vUxSFG__default\",\n  \"featureCard\": \"grow-module__vUxSFG__featureCard\",\n  \"featureCardSection\": \"grow-module__vUxSFG__featureCardSection\",\n  \"glow\": \"grow-module__vUxSFG__glow\",\n  \"glowPulse\": \"grow-module__vUxSFG__glowPulse\",\n  \"handle\": \"grow-module__vUxSFG__handle\",\n  \"hero\": \"grow-module__vUxSFG__hero\",\n  \"highlighted\": \"grow-module__vUxSFG__highlighted\",\n  \"markdownSection\": \"grow-module__vUxSFG__markdownSection\",\n  \"page\": \"grow-module__vUxSFG__page\",\n  \"section\": \"grow-module__vUxSFG__section\",\n  \"summary\": \"grow-module__vUxSFG__summary\",\n  \"tag\": \"grow-module__vUxSFG__tag\",\n  \"tagContainer\": \"grow-module__vUxSFG__tagContainer\",\n  \"title\": \"grow-module__vUxSFG__title\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file://F%3A/growforever-main/frontend/src/components/nodes/ThoughtCard.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { Handle, NodeProps, Position } from 'reactflow'\r\nimport { motion } from 'framer-motion'\r\nimport React from 'react'\r\nimport styles from '../../styles/grow.module.css'\r\n\r\nexport default function ThoughtCard({ data }: NodeProps) {\r\n    const highlight = !!data?.highlight\r\n\r\n    return (\r\n        <motion.div\r\n            initial={{ scale: 0.8, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            whileHover={{ scale: 1.03 }}\r\n            transition={{ type: 'spring', stiffness: 260, damping: 20 }}\r\n            className={`${styles.card} ${highlight ? styles.highlighted : styles.default}`}\r\n        >\r\n            <div className={styles.title}>{data.title || 'Êó†Ê†áÈ¢ò'}</div>\r\n\r\n            <div className={styles.summary}>{data.summary || 'Êó†ÊèèËø∞ÂÜÖÂÆπ'}</div>\r\n\r\n            <div className={styles.tagContainer}>\r\n                {data?.tags?.map((tag: string) => (\r\n                    <span key={tag} className={styles.tag}>\r\n                        #{tag}\r\n                    </span>\r\n                ))}\r\n            </div>\r\n\r\n            <Handle type=\"target\" position={Position.Top} className={styles.handle} />\r\n            <Handle type=\"source\" position={Position.Bottom} className={styles.handle} />\r\n        </motion.div>\r\n    )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOe,SAAS,YAAY,EAAE,IAAI,EAAa;IACnD,MAAM,YAAY,CAAC,CAAC,MAAM;IAE1B,qBACI,8OAAC,0LAAA,CAAA,SAAM,CAAC,GAAG;QACP,SAAS;YAAE,OAAO;YAAK,SAAS;QAAE;QAClC,SAAS;YAAE,OAAO;YAAG,SAAS;QAAE;QAChC,YAAY;YAAE,OAAO;QAAK;QAC1B,YAAY;YAAE,MAAM;YAAU,WAAW;YAAK,SAAS;QAAG;QAC1D,WAAW,GAAG,iIAAA,CAAA,UAAM,CAAC,IAAI,CAAC,CAAC,EAAE,YAAY,iIAAA,CAAA,UAAM,CAAC,WAAW,GAAG,iIAAA,CAAA,UAAM,CAAC,OAAO,EAAE;;0BAE9E,8OAAC;gBAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,KAAK;0BAAG,KAAK,KAAK,IAAI;;;;;;0BAE7C,8OAAC;gBAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,OAAO;0BAAG,KAAK,OAAO,IAAI;;;;;;0BAEjD,8OAAC;gBAAI,WAAW,iIAAA,CAAA,UAAM,CAAC,YAAY;0BAC9B,MAAM,MAAM,IAAI,CAAC,oBACd,8OAAC;wBAAe,WAAW,iIAAA,CAAA,UAAM,CAAC,GAAG;;4BAAE;4BACjC;;uBADK;;;;;;;;;;0BAMnB,8OAAC,4JAAA,CAAA,SAAM;gBAAC,MAAK;gBAAS,UAAU,4JAAA,CAAA,WAAQ,CAAC,GAAG;gBAAE,WAAW,iIAAA,CAAA,UAAM,CAAC,MAAM;;;;;;0BACtE,8OAAC,4JAAA,CAAA,SAAM;gBAAC,MAAK;gBAAS,UAAU,4JAAA,CAAA,WAAQ,CAAC,MAAM;gBAAE,WAAW,iIAAA,CAAA,UAAM,CAAC,MAAM;;;;;;;;;;;;AAGrF","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file://F%3A/growforever-main/frontend/src/types/ThoughtNode.ts"],"sourcesContent":["import ThoughtCard from '@/components/nodes/ThoughtCard'\r\nimport { NodeTypes } from 'reactflow'\r\n\r\nexport const nodeTypes: NodeTypes = {\r\n    thought: ThoughtCard,\r\n}\r\n\r\n"],"names":[],"mappings":";;;AAAA;;AAGO,MAAM,YAAuB;IAChC,SAAS,0IAAA,CAAA,UAAW;AACxB","debugId":null}},
    {"offset": {"line": 256, "column": 0}, "map": {"version":3,"sources":["file://F%3A/growforever-main/frontend/src/components/nodes/ExpandOptionsPopover.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React, { forwardRef } from 'react'\r\nimport { Node } from 'reactflow'\r\nimport { Button, Paper, Typography, Stack } from '@mui/material'\r\n\r\ntype ExpandOptionsPopoverProps = {\r\n    node: Node\r\n    position: { x: number; y: number }\r\n    onExpand: (type: 'related' | 'deep' | 'new') => void\r\n    onClose: () => void\r\n}\r\n\r\n// ‚¨áÔ∏è forwardRef Áî®‰∫éÊé•Êî∂ refÔºå‰ªéÁà∂ÁªÑ‰ª∂Ê≥®ÂÖ•\r\nconst ExpandOptionsPopover = forwardRef<HTMLDivElement, ExpandOptionsPopoverProps>(\r\n    ({ node, position, onExpand, onClose }, ref) => {\r\n        return (\r\n            <Paper\r\n                ref={ref}\r\n                elevation={4}\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: position.y + window.scrollY,\r\n                    left: position.x + window.scrollX,\r\n                    zIndex: 1000,\r\n                    padding: 16,\r\n                    borderRadius: 8,\r\n                    background: 'white',\r\n                    pointerEvents: 'auto',\r\n                }}\r\n            >\r\n                <Typography fontWeight=\"bold\" gutterBottom>\r\n                    Â±ïÂºÄ {node.data?.title || ''}\r\n                </Typography>\r\n                <Stack direction=\"column\" spacing={1}>\r\n                    <Button variant=\"outlined\" onClick={() => onExpand('related')}>\r\n                        üîó ÂÖ≥ËÅîÊâ©Â±ï\r\n                    </Button>\r\n                    <Button variant=\"outlined\" onClick={() => onExpand('deep')}>\r\n                        üìö Ê∑±ÂÖ•Â±ïÂºÄ\r\n                    </Button>\r\n                    <Button variant=\"outlined\" onClick={() => onExpand('new')}>\r\n                        üå± Êñ∞ÊÉ≥Ê≥ï\r\n                    </Button>\r\n                    <Button color=\"inherit\" size=\"small\" onClick={onClose}>\r\n                        ÂèñÊ∂à\r\n                    </Button>\r\n                </Stack>\r\n            </Paper>\r\n        )\r\n    }\r\n)\r\n\r\n// üîê ÂøÖÈ°ªÂä† displayNameÔºåÈÅøÂÖç React Dev Tools Êä•Èîô\r\nExpandOptionsPopover.displayName = 'ExpandOptionsPopover'\r\n\r\nexport default ExpandOptionsPopover\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAAA;AAAA;AAAA;AAJA;;;;AAaA,gCAAgC;AAChC,MAAM,qCAAuB,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAClC,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE;IACpC,qBACI,8OAAC,uLAAA,CAAA,QAAK;QACF,KAAK;QACL,WAAW;QACX,OAAO;YACH,UAAU;YACV,KAAK,SAAS,CAAC,GAAG,OAAO,OAAO;YAChC,MAAM,SAAS,CAAC,GAAG,OAAO,OAAO;YACjC,QAAQ;YACR,SAAS;YACT,cAAc;YACd,YAAY;YACZ,eAAe;QACnB;;0BAEA,8OAAC,sMAAA,CAAA,aAAU;gBAAC,YAAW;gBAAO,YAAY;;oBAAC;oBACnC,KAAK,IAAI,EAAE,SAAS;;;;;;;0BAE5B,8OAAC,uLAAA,CAAA,QAAK;gBAAC,WAAU;gBAAS,SAAS;;kCAC/B,8OAAC,0LAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAW,SAAS,IAAM,SAAS;kCAAY;;;;;;kCAG/D,8OAAC,0LAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAW,SAAS,IAAM,SAAS;kCAAS;;;;;;kCAG5D,8OAAC,0LAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAW,SAAS,IAAM,SAAS;kCAAQ;;;;;;kCAG3D,8OAAC,0LAAA,CAAA,SAAM;wBAAC,OAAM;wBAAU,MAAK;wBAAQ,SAAS;kCAAS;;;;;;;;;;;;;;;;;;AAMvE;AAGJ,2CAA2C;AAC3C,qBAAqB,WAAW,GAAG;uCAEpB","debugId":null}},
    {"offset": {"line": 360, "column": 0}, "map": {"version":3,"sources":["file://F%3A/growforever-main/frontend/src/components/nodes/GraphCanvas.tsx"],"sourcesContent":["'use client'\r\n\r\nimport React, {useCallback, useEffect, useRef, useState} from 'react'\r\nimport ReactFlow, {\r\n    Controls,\r\n    MiniMap,\r\n    useNodesState,\r\n    useEdgesState,\r\n    addEdge,\r\n    Connection,\r\n    Edge,\r\n    MarkerType,\r\n} from 'reactflow'\r\nimport type { Node } from 'reactflow'\r\nimport 'reactflow/dist/style.css'\r\nimport {useGraphStore} from \"@/lib/graphStore\";\r\nimport {nodeTypes} from \"@/types/ThoughtNode\";\r\nimport ExpandOptionsPopover from \"@/components/nodes/ExpandOptionsPopover\";\r\nimport {Typography} from \"@mui/material\";\r\n\r\nexport default function GraphCanvas() {\r\n    const {\r\n        nodes: storeNodes,\r\n        edges: storeEdges,\r\n        setNodes: setStoreNodes,\r\n        addEdge: addEdgeToStore,\r\n    } = useGraphStore()\r\n\r\n    const [nodes, setNodes, onNodesChange] = useNodesState(storeNodes)\r\n    const [edges, setEdges, onEdgesChange] = useEdgesState(storeEdges)\r\n    const growMode = useGraphStore((state) => state.growMode)\r\n\r\n    const [initialized, setInitialized] = useState(false)\r\n    const [selectedNode, setSelectedNode] = useState<Node | null>(null)\r\n    const [popoverPosition, setPopoverPosition] = useState<{ x: number; y: number } | null>(null)\r\n    const popoverRef = useRef<HTMLDivElement | null>(null)\r\n    const MAX_NODE_COUNT = 100\r\n    const mockSummaries = [\r\n        'Á≥ªÁªüËá™Âä®Êâ©Â±ïÁöÑÂÜÖÂÆπ',\r\n        '‰∏éÂΩìÂâç‰∏ªÈ¢òÈ´òÂ∫¶ÂÖ≥ËÅîÁöÑÊ¶ÇÂøµ',\r\n        'ÂèØËÉΩÁöÑÊñ∞È¢ÜÂüüÊñπÂêëÊé¢Á¥¢',\r\n        'Âü∫‰∫é‰∏ä‰∏ãÊñáÁöÑÊ∑±Â∫¶ËÅîÊÉ≥',\r\n        'Êé®ÊºîÂá∫ÁöÑÊΩúÂú®ÈÄªËæëÂàÜÊîØ',\r\n        'ÊäΩË±°Âá∫ÁöÑÂÖ≥ËÅîÂÖÉÁ¥†',\r\n        'Êù•Ëá™AIÁöÑÂêØÂèëÂºèÊé®ÁêÜ',\r\n    ]\r\n\r\n\r\n\r\n    function getRandomExpandType(): 'related' | 'deep' | 'new' {\r\n        const types = ['related', 'deep', 'new']\r\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n        // @ts-expect-error\r\n        return types[Math.floor(Math.random() * types.length)]\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('üß† ÂΩìÂâçËäÇÁÇπÊÄªÊï∞Ôºö', nodes.length)\r\n    }, [nodes])\r\n\r\n    useEffect(() => {\r\n        if (!selectedNode) return\r\n\r\n        if (growMode === 'manual') return // manual Ê®°Âºè‰∏çËá™Âä®Â¢ûÈïø\r\n\r\n        const interval = setInterval(() => {\r\n            handleExpandOption(getRandomExpandType())\r\n        }, growMode === 'fury' ? 200 : 1500)\r\n\r\n        return () => clearInterval(interval)\r\n    }, [growMode, selectedNode])\r\n\r\n    useEffect(() => {\r\n        function handleClickOutside(event: MouseEvent) {\r\n            if (\r\n                popoverRef.current &&\r\n                event.target instanceof window.Node &&\r\n                !popoverRef.current.contains(event.target)\r\n            ) {\r\n                setSelectedNode(null)\r\n                setPopoverPosition(null)\r\n            }\r\n        }\r\n\r\n        document.addEventListener('mousedown', handleClickOutside)\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside)\r\n        }\r\n    }, [])\r\n\r\n    // ÂàùÂßãÂåñÊ†πËäÇÁÇπ\r\n    useEffect(() => {\r\n        if (!initialized && storeNodes.length === 0) {\r\n            setStoreNodes(() => [\r\n                {\r\n                    id: 'root',\r\n                    type: 'thought',\r\n                    position: { x: 300, y: 150 },\r\n                    data: {\r\n                        title: 'üå± Ê∞∏ÊÅí‰πãÊ£Æ - ÁßçÂ≠ê',\r\n                        summary: '‰∏ÄÂàá‰ªé‰∏Ä‰∏™ÊÉ≥Ê≥ïÂºÄÂßã„ÄÇ',\r\n                        tags: ['AI', 'ÊÄùÁª¥Èìæ'],\r\n                        highlight: true,\r\n                        role: 'seed'\r\n                    },\r\n                },\r\n            ])\r\n            setInitialized(true)\r\n        }\r\n    }, [initialized, storeNodes.length, setStoreNodes])\r\n\r\n    // ÂêåÊ≠• zustand Áä∂ÊÄÅ\r\n    useEffect(() => setNodes(storeNodes), [setNodes, storeNodes])\r\n    useEffect(() => setEdges(storeEdges), [setEdges, storeEdges])\r\n\r\n    const onConnect = useCallback(\r\n        (connection: Connection) => {\r\n            if (!connection.source || !connection.target) return\r\n            const newEdge: Edge = {\r\n                ...connection,\r\n                id: `${connection.source}-${connection.target}-${Date.now()}`,\r\n                source: connection.source,\r\n                target: connection.target,\r\n                sourceHandle: connection.sourceHandle ?? undefined,\r\n                targetHandle: connection.targetHandle ?? undefined,\r\n                type: 'default',\r\n                markerEnd: {\r\n                    type: MarkerType.ArrowClosed,\r\n                },\r\n            }\r\n            setEdges((eds) => addEdge(newEdge, eds))\r\n            addEdgeToStore(newEdge)\r\n        },\r\n        [setEdges, addEdgeToStore]\r\n    )\r\n\r\n\r\n    // ÁÇπÂáªËäÇÁÇπ\r\n    const onNodeClick = useCallback(\r\n        (event: React.MouseEvent, clickedNode: Node) => {\r\n            setSelectedNode(clickedNode)\r\n\r\n            if (growMode !== 'manual') return // ÈùûÊâãÂä®Ê®°Âºè‰∏çÂºπÂá∫ Popover\r\n\r\n            const rect = (event.target as HTMLElement).getBoundingClientRect()\r\n            setPopoverPosition({\r\n                x: rect.left + rect.width / 2,\r\n                y: rect.top,\r\n            })\r\n\r\n            // È´ò‰∫ÆÁà∂ËäÇÁÇπ\r\n            const parentEdge = edges.find((e) => e.target === clickedNode.id)\r\n            const parentId = parentEdge?.source\r\n            setNodes((nds) =>\r\n                nds.map((node) => ({\r\n                    ...node,\r\n                    data: {\r\n                        ...node.data,\r\n                        highlight: node.id === parentId || node.id === 'root',\r\n                    },\r\n                }))\r\n            )\r\n        },\r\n        [edges, setNodes, growMode]\r\n    )\r\n\r\n\r\n    const handleExpandOption = (type: 'related' | 'deep' | 'new') => {\r\n        if (nodes.length >= MAX_NODE_COUNT) {\r\n            console.warn('üå™Ô∏è ËäÇÁÇπÊï∞ÈáèËææÂà∞‰∏äÈôêÔºåÂÅúÊ≠¢Ëá™Âä®Êâ©Â±ï')\r\n            return\r\n        }\r\n\r\n        if (!selectedNode) return\r\n\r\n\r\n        const newId = `${selectedNode.id}-${Date.now()}`\r\n\r\n        const baseAngle = Math.random() * Math.PI * 2 // ÈöèÊú∫ÂàùÂßãËßíÂ∫¶\r\n        const radius = 200\r\n        const offsetAngle = (Math.random() - 0.5) * 0.5\r\n\r\n        const angle = baseAngle + offsetAngle\r\n        const newX = selectedNode.position.x + Math.cos(angle) * radius\r\n        const newY = selectedNode.position.y + Math.sin(angle) * radius\r\n\r\n        const newNode: Node = {\r\n            id: newId,\r\n            type: 'thought',\r\n            position: { x: newX, y: newY },\r\n            data: {\r\n                title: type === 'new' ? 'Êñ∞ÊÉ≥Ê≥ï' : type === 'deep' ? 'Ê∑±ÂÖ•Êâ©Â±ï' : 'ÂÖ≥ËÅîÊ¶ÇÂøµ',\r\n                summary: mockSummaries[Math.floor(Math.random() * mockSummaries.length)],\r\n                tags: [type],\r\n                highlight: false,\r\n            },\r\n        }\r\n\r\n        const newEdge: Edge = {\r\n            id: `${selectedNode.id}-${newId}`,\r\n            source: selectedNode.id,\r\n            target: newId,\r\n            type: 'default',\r\n        }\r\n\r\n        setNodes((nds) => [...nds, newNode])\r\n        setEdges((eds) => [...eds, newEdge])\r\n        setSelectedNode(null)\r\n        setPopoverPosition(null)\r\n    }\r\n\r\n\r\n    return (\r\n        <div style={{ height: '100vh', width: '100vw' ,position: 'relative'}}>\r\n            <Typography\r\n                variant=\"caption\"\r\n                sx={{\r\n                    position: 'absolute',\r\n                    top: 16,\r\n                    right: 16,\r\n                    backgroundColor: '#000',\r\n                    color: '#fff',\r\n                    padding: '4px 12px',\r\n                    borderRadius: 4,\r\n                    fontSize: '12px',\r\n                    zIndex: 1000,\r\n                }}\r\n            >\r\n                ÂΩìÂâçÊ®°ÂºèÔºö{growMode === 'manual' ? 'ÊâãÂä®Ê®°Âºè' : growMode === 'free' ? 'Ëá™Áî±Ê®°Âºè' : 'ÁãÇÊö¥Ê®°Âºè'}\r\n            </Typography>\r\n\r\n            <ReactFlow\r\n                nodes={nodes}\r\n                edges={edges}\r\n                onNodesChange={onNodesChange}\r\n                onEdgesChange={onEdgesChange}\r\n                onConnect={onConnect}\r\n                onNodeClick={onNodeClick}\r\n                nodeTypes={nodeTypes}\r\n                fitView\r\n                panOnDrag\r\n                zoomOnScroll\r\n            >\r\n                <MiniMap />\r\n                <Controls />\r\n            </ReactFlow>\r\n\r\n            {growMode === 'manual' && selectedNode && popoverPosition && (\r\n                <ExpandOptionsPopover\r\n                    ref={popoverRef}\r\n                    node={selectedNode}\r\n                    position={popoverPosition}\r\n                    onExpand={handleExpandOption}\r\n                    onClose={() => {\r\n                        setSelectedNode(null)\r\n                        setPopoverPosition(null)\r\n                    }}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 653, "column": 0}, "map": {"version":3,"sources":["file://F%3A/growforever-main/frontend/src/lib/nodeUtils.ts"],"sourcesContent":["import { GraphNodeData } from '@/types/GraphNodeData'\r\n\r\nlet nodeCount = 0\r\n\r\nexport function createThoughtNode(\r\n    x?: number,\r\n    y?: number,\r\n    data: Partial<GraphNodeData> = {}\r\n): {\r\n    id: string;\r\n    type: string;\r\n    position: { x: number; y: number };\r\n    data: { title: string; summary: string; tags: string[]; color: string; highlight: boolean; role: string }\r\n} {\r\n    nodeCount++\r\n\r\n    return {\r\n        id: `node-${Date.now()}-${nodeCount}`,\r\n        type: 'thought',\r\n        position: {\r\n            x: x ?? (100 + (nodeCount % 5) * 180),\r\n            y: y ?? (100 + Math.floor(nodeCount / 5) * 120),\r\n        },\r\n        data: {\r\n            title: data.title ?? `Êñ∞ÊÉ≥Ê≥ï #${nodeCount}`,\r\n            summary: data.summary ?? 'ÁÇπÂáªÂ±ïÂºÄÊÄùÁª¥ÂàÜÊîØ',\r\n            tags: data.tags ?? ['ÈªòËÆ§'],\r\n            color: data.color ?? '#000000',\r\n            highlight: false,\r\n            role: data.role ?? 'normal',\r\n        },\r\n    }\r\n}"],"names":[],"mappings":";;;AAEA,IAAI,YAAY;AAET,SAAS,kBACZ,CAAU,EACV,CAAU,EACV,OAA+B,CAAC,CAAC;IAOjC;IAEA,OAAO;QACH,IAAI,CAAC,KAAK,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,WAAW;QACrC,MAAM;QACN,UAAU;YACN,GAAG,KAAM,MAAM,AAAC,YAAY,IAAK;YACjC,GAAG,KAAM,MAAM,KAAK,KAAK,CAAC,YAAY,KAAK;QAC/C;QACA,MAAM;YACF,OAAO,KAAK,KAAK,IAAI,CAAC,KAAK,EAAE,WAAW;YACxC,SAAS,KAAK,OAAO,IAAI;YACzB,MAAM,KAAK,IAAI,IAAI;gBAAC;aAAK;YACzB,OAAO,KAAK,KAAK,IAAI;YACrB,WAAW;YACX,MAAM,KAAK,IAAI,IAAI;QACvB;IACJ;AACJ","debugId":null}},
    {"offset": {"line": 692, "column": 0}, "map": {"version":3,"sources":["file://F%3A/growforever-main/frontend/src/lib/simulateAutoExpand.ts"],"sourcesContent":["'use client'\r\n\r\nimport { Node } from 'reactflow'\r\nimport { nanoid } from 'nanoid'\r\nimport { useGraphStore } from '@/lib/graphStore'\r\n\r\nfunction getRandomInt(min: number, max: number): number {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\n\r\nfunction isTooClose(posA: { x: number; y: number }, posB: { x: number; y: number }, minDist = 120) {\r\n    const dx = posA.x - posB.x\r\n    const dy = posA.y - posB.y\r\n    return Math.sqrt(dx * dx + dy * dy) < minDist\r\n}\r\n\r\nfunction generateChildNodes(\r\n    parent: Node,\r\n    count: number,\r\n    radius: number,\r\n    angleSpread: number,\r\n    existingNodes: Node[]\r\n): Node[] {\r\n    const angleStep = angleSpread / count\r\n    const generated: Node[] = []\r\n\r\n    for (let i = 0; i < count; i++) {\r\n        let attempt = 0\r\n        let x = 0, y = 0\r\n        let valid = false\r\n\r\n        while (!valid && attempt < 10) {\r\n            const angleDeg = -angleSpread / 2 + angleStep * i + (Math.random() - 0.5) * 10\r\n            const angle = (angleDeg * Math.PI) / 180\r\n            const offset = radius + (Math.random() - 0.5) * 60\r\n\r\n            x = parent.position.x + Math.cos(angle) * offset\r\n            y = parent.position.y + Math.sin(angle) * offset\r\n\r\n            valid = [...existingNodes, ...generated].every(\r\n                (n) => !isTooClose(n.position, { x, y })\r\n            )\r\n\r\n            attempt++\r\n        }\r\n\r\n        generated.push({\r\n            id: nanoid(),\r\n            type: 'thought',\r\n            position: { x, y },\r\n            data: {\r\n                title: 'Êâ©Â±ïÊÉ≥Ê≥ï',\r\n                summary: 'Ëá™Âä®Êâ©Â±ïËäÇÁÇπ',\r\n                tags: ['Ëá™Âä®'],\r\n                highlight: false,\r\n            },\r\n        })\r\n    }\r\n\r\n    return generated\r\n}\r\n\r\nasync function expandRecursively(\r\n    parent: Node,\r\n    depth: number,\r\n    maxDepth: number,\r\n    delay: number,\r\n    minChildren: number,\r\n    maxChildren: number,\r\n    radius: number,\r\n    angleSpread: number,\r\n    autoArrange: boolean\r\n) {\r\n    if (depth >= maxDepth) return\r\n\r\n    const {\r\n        addNode,\r\n        addEdge,\r\n        growMode,\r\n        isAutoExpanding,\r\n        nodes: existingNodes,\r\n    } = useGraphStore.getState()\r\n\r\n    if (growMode === 'manual' || !isAutoExpanding) return\r\n\r\n    const count = getRandomInt(minChildren, maxChildren)\r\n    const children = generateChildNodes(parent, count, radius, angleSpread, existingNodes)\r\n\r\n    for (const child of children) {\r\n        addNode(child)\r\n        addEdge({\r\n            id: `${parent.id}-${child.id}`,\r\n            source: parent.id,\r\n            target: child.id,\r\n            type: 'default',\r\n        })\r\n\r\n        await new Promise((res) => setTimeout(res, delay))\r\n        await expandRecursively(\r\n            child,\r\n            depth + 1,\r\n            maxDepth,\r\n            delay,\r\n            minChildren,\r\n            maxChildren,\r\n            radius * 0.9,\r\n            angleSpread,\r\n            autoArrange\r\n        )\r\n    }\r\n}\r\n\r\nexport async function simulateAutoExpand(rootId: string) {\r\n    const {\r\n        growMode,\r\n        nodes,\r\n        setAutoExpanding,\r\n        isAutoExpanding,\r\n        config,\r\n    } = useGraphStore.getState()\r\n\r\n    if (growMode === 'manual' || isAutoExpanding) return\r\n\r\n    const conf = config[growMode]\r\n    const root = nodes.find((n) => n.id === rootId)\r\n    if (!root) return\r\n\r\n    setAutoExpanding(true)\r\n\r\n    await expandRecursively(\r\n        root,\r\n        0,\r\n        conf.maxDepth,\r\n        conf.interval,\r\n        conf.childrenRange[0],\r\n        conf.childrenRange[1],\r\n        conf.spreadRadius,\r\n        conf.angleSpread,\r\n        conf.autoArrange\r\n    )\r\n\r\n    setAutoExpanding(false)\r\n}\r\n"],"names":[],"mappings":";;;AAGA;AACA;AAJA;;;AAMA,SAAS,aAAa,GAAW,EAAE,GAAW;IAC1C,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,MAAM,MAAM,CAAC,KAAK;AACzD;AAEA,SAAS,WAAW,IAA8B,EAAE,IAA8B,EAAE,UAAU,GAAG;IAC7F,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC;IAC1B,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC;IAC1B,OAAO,KAAK,IAAI,CAAC,KAAK,KAAK,KAAK,MAAM;AAC1C;AAEA,SAAS,mBACL,MAAY,EACZ,KAAa,EACb,MAAc,EACd,WAAmB,EACnB,aAAqB;IAErB,MAAM,YAAY,cAAc;IAChC,MAAM,YAAoB,EAAE;IAE5B,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IAAK;QAC5B,IAAI,UAAU;QACd,IAAI,IAAI,GAAG,IAAI;QACf,IAAI,QAAQ;QAEZ,MAAO,CAAC,SAAS,UAAU,GAAI;YAC3B,MAAM,WAAW,CAAC,cAAc,IAAI,YAAY,IAAI,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;YAC5E,MAAM,QAAQ,AAAC,WAAW,KAAK,EAAE,GAAI;YACrC,MAAM,SAAS,SAAS,CAAC,KAAK,MAAM,KAAK,GAAG,IAAI;YAEhD,IAAI,OAAO,QAAQ,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,SAAS;YAC1C,IAAI,OAAO,QAAQ,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,SAAS;YAE1C,QAAQ;mBAAI;mBAAkB;aAAU,CAAC,KAAK,CAC1C,CAAC,IAAM,CAAC,WAAW,EAAE,QAAQ,EAAE;oBAAE;oBAAG;gBAAE;YAG1C;QACJ;QAEA,UAAU,IAAI,CAAC;YACX,IAAI,CAAA,GAAA,+IAAA,CAAA,SAAM,AAAD;YACT,MAAM;YACN,UAAU;gBAAE;gBAAG;YAAE;YACjB,MAAM;gBACF,OAAO;gBACP,SAAS;gBACT,MAAM;oBAAC;iBAAK;gBACZ,WAAW;YACf;QACJ;IACJ;IAEA,OAAO;AACX;AAEA,eAAe,kBACX,MAAY,EACZ,KAAa,EACb,QAAgB,EAChB,KAAa,EACb,WAAmB,EACnB,WAAmB,EACnB,MAAc,EACd,WAAmB,EACnB,WAAoB;IAEpB,IAAI,SAAS,UAAU;IAEvB,MAAM,EACF,OAAO,EACP,OAAO,EACP,QAAQ,EACR,eAAe,EACf,OAAO,aAAa,EACvB,GAAG,wHAAA,CAAA,gBAAa,CAAC,QAAQ;IAE1B,IAAI,aAAa,YAAY,CAAC,iBAAiB;IAE/C,MAAM,QAAQ,aAAa,aAAa;IACxC,MAAM,WAAW,mBAAmB,QAAQ,OAAO,QAAQ,aAAa;IAExE,KAAK,MAAM,SAAS,SAAU;QAC1B,QAAQ;QACR,QAAQ;YACJ,IAAI,GAAG,OAAO,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE;YAC9B,QAAQ,OAAO,EAAE;YACjB,QAAQ,MAAM,EAAE;YAChB,MAAM;QACV;QAEA,MAAM,IAAI,QAAQ,CAAC,MAAQ,WAAW,KAAK;QAC3C,MAAM,kBACF,OACA,QAAQ,GACR,UACA,OACA,aACA,aACA,SAAS,KACT,aACA;IAER;AACJ;AAEO,eAAe,mBAAmB,MAAc;IACnD,MAAM,EACF,QAAQ,EACR,KAAK,EACL,gBAAgB,EAChB,eAAe,EACf,MAAM,EACT,GAAG,wHAAA,CAAA,gBAAa,CAAC,QAAQ;IAE1B,IAAI,aAAa,YAAY,iBAAiB;IAE9C,MAAM,OAAO,MAAM,CAAC,SAAS;IAC7B,MAAM,OAAO,MAAM,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IACxC,IAAI,CAAC,MAAM;IAEX,iBAAiB;IAEjB,MAAM,kBACF,MACA,GACA,KAAK,QAAQ,EACb,KAAK,QAAQ,EACb,KAAK,aAAa,CAAC,EAAE,EACrB,KAAK,aAAa,CAAC,EAAE,EACrB,KAAK,YAAY,EACjB,KAAK,WAAW,EAChB,KAAK,WAAW;IAGpB,iBAAiB;AACrB","debugId":null}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"sources":["file://F%3A/growforever-main/frontend/src/components/nodes/LayoutPresetSelector.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { Box, Button, Stack, Typography } from '@mui/material'\r\nimport { useGraphStore } from '@/lib/graphStore'\r\n\r\nconst layoutNames = {\r\n    tree: 'üå≤ Ê†ëÁä∂',\r\n    circle: '‚≠ï ÂúÜÂΩ¢',\r\n    star: '‚≠ê ÊòüÂΩ¢',\r\n} as const\r\n\r\nexport default function LayoutPresetSelector() {\r\n    const growMode = useGraphStore((s) => s.growMode)\r\n    const setConfig = useGraphStore((s) => s.setConfig)\r\n\r\n    const handleSelect = (type: keyof typeof layoutNames) => {\r\n        const presets = {\r\n            tree: { spreadRadius: 500, angleSpread: 60, autoArrange: true },\r\n            circle: { spreadRadius: 500, angleSpread: 360, autoArrange: true },\r\n            star: { spreadRadius: 500, angleSpread: 180, autoArrange: true },\r\n        }\r\n\r\n        setConfig(growMode, presets[type])\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Typography fontWeight=\"bold\" gutterBottom>\r\n                üí† Â∏ÉÂ±ÄÊ®°ÊùøÈ¢ÑËÆæ\r\n            </Typography>\r\n            <Stack direction=\"row\" spacing={1}>\r\n                {Object.entries(layoutNames).map(([key, label]) => (\r\n                    <Button key={key} variant=\"outlined\" onClick={() => handleSelect(key as keyof typeof layoutNames)}>\r\n                        {label}\r\n                    </Button>\r\n                ))}\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AACA;AAHA;;;;AAKA,MAAM,cAAc;IAChB,MAAM;IACN,QAAQ;IACR,MAAM;AACV;AAEe,SAAS;IACpB,MAAM,WAAW,CAAA,GAAA,wHAAA,CAAA,gBAAa,AAAD,EAAE,CAAC,IAAM,EAAE,QAAQ;IAChD,MAAM,YAAY,CAAA,GAAA,wHAAA,CAAA,gBAAa,AAAD,EAAE,CAAC,IAAM,EAAE,SAAS;IAElD,MAAM,eAAe,CAAC;QAClB,MAAM,UAAU;YACZ,MAAM;gBAAE,cAAc;gBAAK,aAAa;gBAAI,aAAa;YAAK;YAC9D,QAAQ;gBAAE,cAAc;gBAAK,aAAa;gBAAK,aAAa;YAAK;YACjE,MAAM;gBAAE,cAAc;gBAAK,aAAa;gBAAK,aAAa;YAAK;QACnE;QAEA,UAAU,UAAU,OAAO,CAAC,KAAK;IACrC;IAEA,qBACI,8OAAC,iLAAA,CAAA,MAAG;;0BACA,8OAAC,sMAAA,CAAA,aAAU;gBAAC,YAAW;gBAAO,YAAY;0BAAC;;;;;;0BAG3C,8OAAC,uLAAA,CAAA,QAAK;gBAAC,WAAU;gBAAM,SAAS;0BAC3B,OAAO,OAAO,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,iBAC1C,8OAAC,0LAAA,CAAA,SAAM;wBAAW,SAAQ;wBAAW,SAAS,IAAM,aAAa;kCAC5D;uBADQ;;;;;;;;;;;;;;;;AAOjC","debugId":null}},
    {"offset": {"line": 865, "column": 0}, "map": {"version":3,"sources":["file://F%3A/growforever-main/frontend/src/components/nodes/ExpandConfigPanel.tsx"],"sourcesContent":["'use client'\r\n\r\nimport {\r\n    Box, Typography, Slider, Switch, FormControlLabel, InputLabel, Stack\r\n} from '@mui/material'\r\nimport { useGraphStore } from '@/lib/graphStore'\r\nimport {GrowMode} from \"@/types/GrowthNode\";\r\nimport LayoutPresetSelector from \"@/components/nodes/LayoutPresetSelector\";\r\nimport {useMediaQuery, useTheme} from \"@mui/system\";\r\n\r\ntype ExpandConfigPanelProps = {\r\n    mode?: GrowMode\r\n}\r\n\r\nexport default function ExpandConfigPanel({ mode }: ExpandConfigPanelProps) {\r\n    const currentMode = useGraphStore((s) => s.growMode)\r\n    const realMode = mode || currentMode\r\n    const config = useGraphStore((s) => s.config[realMode])\r\n    const setConfig = useGraphStore((s) => s.setConfig)\r\n\r\n    const theme = useTheme()\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\r\n\r\n    const update = (key: keyof typeof config, value: number | boolean | number[]) => {\r\n        setConfig(realMode, { [key]: value })\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            p={3}\r\n            bgcolor=\"#f9f9f9\"\r\n            borderRadius={2}\r\n            width={320}\r\n            maxWidth=\"100%\"\r\n            sx={{\r\n                '@media (max-width: 600px)': {\r\n                    transform: 'scale(0.94)',\r\n                    transformOrigin: 'top center',\r\n                    px: 1.5,\r\n                    py: 2,\r\n                },\r\n            }}\r\n            boxShadow={2}\r\n        >\r\n            <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                {[realMode]} ÈÖçÁΩÆ\r\n            </Typography>\r\n\r\n            <Stack spacing={isMobile ? 2 : 3}>\r\n                {/* üí† Â∏ÉÂ±ÄÊ®°Êùø */}\r\n                <LayoutPresetSelector />\r\n                <Box>\r\n                    <InputLabel>ÊúÄÂ§ßÊâ©Â±ïÊ∑±Â∫¶</InputLabel>\r\n                    <Slider\r\n                        value={config.maxDepth}\r\n                        onChange={(_, val) => update('maxDepth', val)}\r\n                        min={1}\r\n                        max={10}\r\n                    />\r\n                </Box>\r\n\r\n                <Box>\r\n                    <InputLabel>Â≠êËäÇÁÇπÊï∞ÈáèËåÉÂõ¥</InputLabel>\r\n                    <Slider\r\n                        value={config.childrenRange}\r\n                        onChange={(_, val) => update('childrenRange', val)}\r\n                        valueLabelDisplay=\"auto\"\r\n                        min={1}\r\n                        max={6}\r\n                    />\r\n                </Box>\r\n\r\n                <Box>\r\n                    <InputLabel>ÁîüÊàêÈó¥ÈöîÈÄüÂ∫¶ÔºàmsÔºâ</InputLabel>\r\n                    <Slider\r\n                        value={config.interval}\r\n                        onChange={(_, val) => update('interval', val)}\r\n                        min={50}\r\n                        max={2000}\r\n                        step={50}\r\n                    />\r\n                </Box>\r\n\r\n                <Box>\r\n                    <InputLabel>ÂèëÊï£ËßíÂ∫¶Ôºà¬∞Ôºâ</InputLabel>\r\n                    <Slider\r\n                        value={config.angleSpread}\r\n                        onChange={(_, val) => update('angleSpread', val)}\r\n                        min={30}\r\n                        max={360}\r\n                    />\r\n                </Box>\r\n\r\n                <Box>\r\n                    <InputLabel>Â≠êËäÇÁÇπÊâ©Êï£ÂçäÂæÑ</InputLabel>\r\n                    <Slider\r\n                        value={config.spreadRadius}\r\n                        onChange={(_, val) => update('spreadRadius', val)}\r\n                        min={300}\r\n                        max={1000}\r\n                    />\r\n                </Box>\r\n\r\n                <FormControlLabel\r\n                    control={\r\n                        <Switch\r\n                            checked={config.autoArrange}\r\n                            onChange={(_, checked) => update('autoArrange', checked)}\r\n                        />\r\n                    }\r\n                    label=\"Ëá™Âä®ÊéíÂàóËäÇÁÇπ\"\r\n                />\r\n            </Stack>\r\n        </Box>\r\n    )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1097, "column": 0}, "map": {"version":3,"sources":["file://F%3A/growforever-main/frontend/src/components/nodes/ConfigDrawer.tsx"],"sourcesContent":["'use client'\r\n\r\nimport {\r\n    Drawer,\r\n    Box,\r\n    Typography,\r\n    IconButton,\r\n    Divider,\r\n    Tabs,\r\n    Tab,\r\n} from '@mui/material'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport ExpandConfigPanel from '@/components/nodes/ExpandConfigPanel'\r\nimport {useState} from 'react'\r\nimport {GrowMode} from '@/types/GrowthNode'\r\nimport {useGraphStore} from '@/lib/graphStore'\r\n\r\ntype Props = {\r\n    open: boolean,\r\n    closeAction: () => void,\r\n}\r\n\r\nconst modeLabelMap = {\r\n    manual: 'ÊâãÂä®Ê®°Âºè',\r\n    free: 'Ëá™Áî±Ê®°Âºè',\r\n    fury: 'ÁãÇÊö¥Ê®°Âºè',\r\n}\r\n\r\nexport default function ConfigDrawer({open, closeAction}: Props) {\r\n    const [tab, setTab] = useState<GrowMode>('manual')\r\n    const setMode = useGraphStore((s) => s.setGrowMode)\r\n\r\n    return (\r\n        <Drawer anchor=\"right\" open={open} onClose={closeAction}>\r\n            <Box sx={{width: 400, p: 3}}>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Typography variant=\"h6\">È´òÁ∫ßÈÖçÁΩÆ</Typography>\r\n                    <IconButton onClick={closeAction}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </Box>\r\n\r\n                <Divider sx={{my: 2}}/>\r\n\r\n                <Tabs\r\n                    value={tab}\r\n                    onChange={(_, val) => setTab(val)}\r\n                    textColor=\"secondary\"\r\n                    indicatorColor=\"secondary\"\r\n                >\r\n                    <Tab value=\"manual\" label=\"ÊâãÂä®\"/>\r\n                    <Tab value=\"free\" label=\"Ëá™Áî±\"/>\r\n                    <Tab value=\"fury\" label=\"ÁãÇÊö¥\"/>\r\n                </Tabs>\r\n\r\n                <Box\r\n                    sx={{\r\n                        width: '100%',\r\n                        maxWidth: 400,\r\n                        mx: 'auto',\r\n                        px: 2,\r\n                        py: 3,\r\n                    }}\r\n                >\r\n                    <ExpandConfigPanel mode={tab}/>\r\n                    <Box mt={2}>\r\n                        <Typography variant=\"caption\" color=\"textSecondary\">\r\n                            ÂΩìÂâçÈÖçÁΩÆÊ®°ÂºèÔºö\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\" fontWeight=\"bold\">\r\n                            {modeLabelMap[tab]}\r\n                        </Typography>\r\n                        <Box mt={1}>\r\n                            <button\r\n                                onClick={() => setMode(tab)}\r\n                                className=\"bg-black text-white py-1 px-4 rounded\"\r\n                            >\r\n                                Â∫îÁî®Ê≠§Ê®°Âºè\r\n                            </button>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Drawer>\r\n    )\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAEA;AAfA;;;;;;;AAsBA,MAAM,eAAe;IACjB,QAAQ;IACR,MAAM;IACN,MAAM;AACV;AAEe,SAAS,aAAa,EAAC,IAAI,EAAE,WAAW,EAAQ;IAC3D,MAAM,CAAC,KAAK,OAAO,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;IACzC,MAAM,UAAU,CAAA,GAAA,wHAAA,CAAA,gBAAa,AAAD,EAAE,CAAC,IAAM,EAAE,WAAW;IAElD,qBACI,8OAAC,0LAAA,CAAA,SAAM;QAAC,QAAO;QAAQ,MAAM;QAAM,SAAS;kBACxC,cAAA,8OAAC,iLAAA,CAAA,MAAG;YAAC,IAAI;gBAAC,OAAO;gBAAK,GAAG;YAAC;;8BACtB,8OAAC,iLAAA,CAAA,MAAG;oBAAC,SAAQ;oBAAO,gBAAe;oBAAgB,YAAW;;sCAC1D,8OAAC,sMAAA,CAAA,aAAU;4BAAC,SAAQ;sCAAK;;;;;;sCACzB,8OAAC,sMAAA,CAAA,aAAU;4BAAC,SAAS;sCACjB,cAAA,8OAAC,0JAAA,CAAA,UAAS;;;;;;;;;;;;;;;;8BAIlB,8OAAC,6LAAA,CAAA,UAAO;oBAAC,IAAI;wBAAC,IAAI;oBAAC;;;;;;8BAEnB,8OAAC,oLAAA,CAAA,OAAI;oBACD,OAAO;oBACP,UAAU,CAAC,GAAG,MAAQ,OAAO;oBAC7B,WAAU;oBACV,gBAAe;;sCAEf,8OAAC,iLAAA,CAAA,MAAG;4BAAC,OAAM;4BAAS,OAAM;;;;;;sCAC1B,8OAAC,iLAAA,CAAA,MAAG;4BAAC,OAAM;4BAAO,OAAM;;;;;;sCACxB,8OAAC,iLAAA,CAAA,MAAG;4BAAC,OAAM;4BAAO,OAAM;;;;;;;;;;;;8BAG5B,8OAAC,iLAAA,CAAA,MAAG;oBACA,IAAI;wBACA,OAAO;wBACP,UAAU;wBACV,IAAI;wBACJ,IAAI;wBACJ,IAAI;oBACR;;sCAEA,8OAAC,gJAAA,CAAA,UAAiB;4BAAC,MAAM;;;;;;sCACzB,8OAAC,iLAAA,CAAA,MAAG;4BAAC,IAAI;;8CACL,8OAAC,sMAAA,CAAA,aAAU;oCAAC,SAAQ;oCAAU,OAAM;8CAAgB;;;;;;8CAGpD,8OAAC,sMAAA,CAAA,aAAU;oCAAC,SAAQ;oCAAY,YAAW;8CACtC,YAAY,CAAC,IAAI;;;;;;8CAEtB,8OAAC,iLAAA,CAAA,MAAG;oCAAC,IAAI;8CACL,cAAA,8OAAC;wCACG,SAAS,IAAM,QAAQ;wCACvB,WAAU;kDACb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS7B","debugId":null}},
    {"offset": {"line": 1296, "column": 0}, "map": {"version":3,"sources":["file://F%3A/growforever-main/frontend/src/components/nodes/ControlPanel.tsx"],"sourcesContent":["'use client'\r\n\r\nimport {Button, Stack, Popover, IconButton, Tooltip, Box, Drawer} from '@mui/material'\r\nimport SettingsIcon from '@mui/icons-material/Settings'\r\nimport { useGraphStore } from '@/lib/graphStore'\r\nimport { createThoughtNode } from '@/lib/nodeUtils'\r\nimport { simulateAutoExpand } from '@/lib/simulateAutoExpand'\r\nimport { GrowMode } from '@/types/GrowthNode'\r\nimport { useState } from 'react'\r\nimport ExpandConfigPanel from '@/components/nodes/ExpandConfigPanel'\r\nimport ConfigDrawer from \"@/components/nodes/ConfigDrawer\";\r\nimport {useMediaQuery, useTheme} from \"@mui/system\";\r\nimport {MenuIcon} from \"lucide-react\";\r\n\r\nconst modeNameMap = {\r\n    manual: 'ÊâãÂä®Ê®°Âºè',\r\n    free: 'Ëá™Áî±Ê®°Âºè',\r\n    fury: 'ÁãÇÊö¥Ê®°Âºè',\r\n}\r\n\r\nexport default function ControlPanel() {\r\n    const theme = useTheme()\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('sm'))\r\n    const [menuOpen, setMenuOpen] = useState(false)\r\n\r\n    const { addNode, reset, growMode, setGrowMode, nodes } = useGraphStore()\r\n\r\n    const handleAdd = () => {\r\n        const node = createThoughtNode(Math.random() * 600, Math.random() * 400, {\r\n            title: 'ÊâãÂä®ËäÇÁÇπ',\r\n            summary: 'Áî®Êà∑ÊâãÂä®Ê∑ªÂä†',\r\n            tags: ['ÊâãÂä®'],\r\n            color: '#4ade80',\r\n        })\r\n        addNode(node)\r\n    }\r\n\r\n    const handleAutoGrow = () => {\r\n        const root = nodes.find((n) => n.id === 'root')\r\n        if (root) simulateAutoExpand(root.id)\r\n    }\r\n\r\n    const handleToggleMode = () => {\r\n        const nextMode: GrowMode =\r\n            growMode === 'manual' ? 'free' : growMode === 'free' ? 'fury' : 'manual'\r\n        setGrowMode(nextMode)\r\n    }\r\n\r\n    // Popover ÊéßÂà∂\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\r\n    const handleCloseConfig = () => setAnchorEl(null)\r\n    const openPopover = Boolean(anchorEl)\r\n\r\n    // Drawer ÊéßÂà∂\r\n    const [drawerOpen, setDrawerOpen] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            {isMobile ? (\r\n                <>\r\n                    <Box sx={{ display: 'flex', justifyContent: 'flex-end', mb: 2 }}>\r\n                        <IconButton onClick={() => setMenuOpen(true)} color=\"primary\">\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                    </Box>\r\n\r\n                    <Drawer anchor=\"right\" open={menuOpen} onClose={() => setMenuOpen(false)}>\r\n                        <Box sx={{ width: 260, p: 2 }}>\r\n                            <Button variant=\"contained\" fullWidth onClick={handleAdd} sx={{ mb: 1 }}>\r\n                                ‚ûï Ê∑ªÂä†ËäÇÁÇπ\r\n                            </Button>\r\n                            <Button variant=\"outlined\" fullWidth color=\"error\" onClick={reset} sx={{ mb: 1 }}>\r\n                                üóëÔ∏è Ê∏ÖÁ©∫ÁîªÂ∏É\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                fullWidth\r\n                                onClick={handleAutoGrow}\r\n                                disabled={growMode === 'manual'}\r\n                                sx={{ mb: 1 }}\r\n                            >\r\n                                üöÄ Ëá™Âä®Êâ©Â±ïÔºà{modeNameMap[growMode]}Ôºâ\r\n                            </Button>\r\n                            <Button variant=\"text\" fullWidth onClick={handleToggleMode} sx={{ mb: 1 }}>\r\n                                ÂàáÊç¢‰∏∫{' '}\r\n                                {modeNameMap[\r\n                                    growMode === 'manual' ? 'free' : growMode === 'free' ? 'fury' : 'manual'\r\n                                    ]}\r\n                            </Button>\r\n                            <Button\r\n                                startIcon={<SettingsIcon />}\r\n                                onClick={() => {\r\n                                    setDrawerOpen(true)\r\n                                    setMenuOpen(false)\r\n                                }}\r\n                                fullWidth\r\n                            >\r\n                                ÊâìÂºÄÈ´òÁ∫ßÈÖçÁΩÆ\r\n                            </Button>\r\n                        </Box>\r\n                    </Drawer>\r\n                </>\r\n            ) : (\r\n                <Stack\r\n                    direction=\"row\"\r\n                    spacing={2}\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                    sx={{ mb: 2 }}\r\n                >\r\n                    <Button variant=\"contained\" onClick={handleAdd}>\r\n                        ‚ûï Ê∑ªÂä†ËäÇÁÇπ\r\n                    </Button>\r\n                    <Button variant=\"outlined\" color=\"error\" onClick={reset}>\r\n                        üóëÔ∏è Ê∏ÖÁ©∫ÁîªÂ∏É\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={handleAutoGrow}\r\n                        disabled={growMode === 'manual'}\r\n                    >\r\n                        üöÄ Ëá™Âä®Êâ©Â±ïÔºà{modeNameMap[growMode]}Ôºâ\r\n                    </Button>\r\n                    <Button variant=\"text\" onClick={handleToggleMode}>\r\n                        ÂàáÊç¢‰∏∫{' '}\r\n                        {modeNameMap[\r\n                            growMode === 'manual' ? 'free' : growMode === 'free' ? 'fury' : 'manual'\r\n                            ]}\r\n                    </Button>\r\n                    <Tooltip title=\"ÊâìÂºÄÈ´òÁ∫ßÈÖçÁΩÆ\">\r\n                        <IconButton onClick={() => setDrawerOpen(true)}>\r\n                            <SettingsIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Stack>\r\n            )}\r\n\r\n\r\n\r\n            <Popover\r\n                open={openPopover}\r\n                anchorEl={anchorEl}\r\n                onClose={handleCloseConfig}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                PaperProps={{\r\n                    sx: { mt: 1, p: 1, borderRadius: 2, minWidth: 360 },\r\n                }}\r\n            >\r\n                <ExpandConfigPanel />\r\n            </Popover>\r\n\r\n            <ConfigDrawer open={drawerOpen} closeAction={() => setDrawerOpen(false)} />\r\n        </>\r\n    )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1618, "column": 0}, "map": {"version":3,"sources":["file://F%3A/growforever-main/frontend/src/app/graph/page.tsx"],"sourcesContent":["'use client'\r\nimport GraphCanvas from '../../components/nodes/GraphCanvas'\r\nimport ControlPanel from '../../components/nodes/ControlPanel'\r\nimport {AppBar, Box, Toolbar} from '@mui/material'\r\nimport {ReactFlowProvider} from \"reactflow\";\r\n\r\nexport default function GraphPage() {\r\n    return (\r\n        <Box display=\"flex\" flexDirection=\"column\" height=\"100vh\">\r\n            <AppBar position=\"static\" color=\"default\" elevation={1}>\r\n                <Toolbar>\r\n                    <ControlPanel />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Box flex={1} height=\"100%\" width=\"100%\" position=\"relative\" overflow=\"hidden\">\r\n                <ReactFlowProvider>\r\n                    <GraphCanvas />\r\n                </ReactFlowProvider>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAAA;AAAA;AACA;AAJA;;;;;;AAMe,SAAS;IACpB,qBACI,8OAAC,iLAAA,CAAA,MAAG;QAAC,SAAQ;QAAO,eAAc;QAAS,QAAO;;0BAC9C,8OAAC,0LAAA,CAAA,SAAM;gBAAC,UAAS;gBAAS,OAAM;gBAAU,WAAW;0BACjD,cAAA,8OAAC,6LAAA,CAAA,UAAO;8BACJ,cAAA,8OAAC,2IAAA,CAAA,UAAY;;;;;;;;;;;;;;;0BAGrB,8OAAC,iLAAA,CAAA,MAAG;gBAAC,MAAM;gBAAG,QAAO;gBAAO,OAAM;gBAAO,UAAS;gBAAW,UAAS;0BAClE,cAAA,8OAAC,4JAAA,CAAA,oBAAiB;8BACd,cAAA,8OAAC,0IAAA,CAAA,UAAW;;;;;;;;;;;;;;;;;;;;;AAKhC","debugId":null}}]
}